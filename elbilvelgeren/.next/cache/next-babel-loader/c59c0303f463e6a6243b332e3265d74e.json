{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport { useRouter } from 'next/router';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`;\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`; // ElbilDetail.getInitialProps = async ({req}) =>{\n//   let url = ''\n//   if (typeof window !== \"undefined\") {\n//     url = window.location.href\n//   } else {\n//     url = req.url\n//   }\n//   let parameter = url.split(\"=\")\n//   // Getting the id from the second part of the URL\n//   let elbilId = Number(parameter[1])\n//   // Returning elbilId to the id from Params\n//   return {elbilId};\n// }\n\nconst router = useRouter();\nlet queryId = router.query.id;\n\nfunction ElbilDetail(queryId) {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  useEffect(() => {});\n\n  const articleData = _JSON$stringify(data); // Getting ID from Router\n  // Filtering out all the Cars that does not match the id \n\n\n  const elbilDetail = elbiler.findIndex(elbil => elbil.id === 4);\n  console.log(elbilDetail); // Mapping the id that remains after filtering\n\n  const elBil = elbilDetail.map(elbil => __jsx(Fade, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(CarCard, {\n    merke: elbil.modell,\n    modell: elbil.merke,\n    type: elbil.type,\n    rekkevidde: elbil.rekkevidde,\n    pris: elbil.pris,\n    bildeURL: elbil.bildeURL,\n    id: elbil.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Sitteplasser: \", elbil.sitteplasser), articleData)));\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), elBil);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","Navbar","CarCard","FlexWrapper","styled","useRouter","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","router","queryId","query","id","ElbilDetail","loading","error","data","fetchMore","networkStatus","notifyOnNetworkStatusChange","articleData","elbilDetail","findIndex","elbil","console","log","elBil","map","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAI;;;;;CAA1B;AAMA,MAAMC,eAAe,GAAGJ,GAAI;;;;;;;;;;CAA5B,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,MAAM,GAAGT,SAAS,EAAxB;AACA,IAAIU,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA3B;;AAEA,SAASC,WAAT,CAAqBH,OAArB,EAA8B;AAC5B,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDf,QAAQ,CACjEK,eADiE,EAEjE;AACEW,IAAAA,2BAA2B,EAAE;AAD/B,GAFiE,CAAnE;AAMAxB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;;AAGA,QAAMyB,WAAW,GAAG,gBAAeJ,IAAf,CAApB,CAV4B,CAY5B;AAGA;;;AACA,QAAMK,WAAW,GAAGpB,OAAO,CAACqB,SAAR,CAAkBC,KAAK,IAAIA,KAAK,CAACX,EAAN,KAAa,CAAxC,CAApB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAjB4B,CAmB5B;;AACA,QAAMK,KAAK,GAAGL,WAAW,CAACM,GAAZ,CAAgBJ,KAAK,IACjC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACK,MADf;AAEE,IAAA,MAAM,EAAEL,KAAK,CAACM,KAFhB;AAGE,IAAA,IAAI,EAAEN,KAAK,CAACO,IAHd;AAIE,IAAA,UAAU,EAAEP,KAAK,CAACQ,UAJpB;AAKE,IAAA,IAAI,EAAER,KAAK,CAACS,IALd;AAME,IAAA,QAAQ,EAAET,KAAK,CAACU,QANlB;AAOE,IAAA,EAAE,EAAEV,KAAK,CAACX,EAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBW,KAAK,CAACW,YAAzB,CAVA,EAWCd,WAXD,CADF,CADY,CAAd;AAkBE,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGM,KAFH,CADF;AAMH;;AAED,eAAerB,UAAU,CAACQ,WAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\nimport { useRouter } from 'next/router'\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`\n\n// ElbilDetail.getInitialProps = async ({req}) =>{\n//   let url = ''\n//   if (typeof window !== \"undefined\") {\n//     url = window.location.href\n//   } else {\n//     url = req.url\n//   }\n  \n//   let parameter = url.split(\"=\")\n//   // Getting the id from the second part of the URL\n//   let elbilId = Number(parameter[1])\n//   // Returning elbilId to the id from Params\n//   return {elbilId};\n// }\n\nconst router = useRouter();\nlet queryId = router.query.id\n\nfunction ElbilDetail(queryId) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n  useEffect(() => {\n   \n  });\n  const articleData = JSON.stringify(data)\n\n  // Getting ID from Router\n\n\n  // Filtering out all the Cars that does not match the id \n  const elbilDetail = elbiler.findIndex(elbil => elbil.id === 4);\n  console.log(elbilDetail)\n\n  // Mapping the id that remains after filtering\n  const elBil = elbilDetail.map(elbil => \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={elbil.modell} \n        modell={elbil.merke}  \n        type={elbil.type}\n        rekkevidde={elbil.rekkevidde} \n        pris={elbil.pris} \n        bildeURL={elbil.bildeURL}\n        id={elbil.id}\n    />\n      <h3>Sitteplasser: {elbil.sitteplasser}</h3>\n      {articleData}\n      </Detail>\n    </Fade>\n    );\n\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBil}\n      </FlexWrapper>\n    )\n}\n\nexport default withApollo(ElbilDetail);\n\n"]},"metadata":{},"sourceType":"module"}