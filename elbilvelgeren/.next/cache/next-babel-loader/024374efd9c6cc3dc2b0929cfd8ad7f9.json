{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    labrador {\\n    article(id: 71564397) {\\n      title\\n      bodytextHTML\\n      imageId\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth: 100%;\\ndisplay: flex;\\nflex-direction: column;\\nalign-self: center;  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport { useRouter } from 'next/router';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nvar Detail = styled.div(_templateObject());\nvar ALL_POSTS_QUERY = gql(_templateObject2());\n\nElbilDetail.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var req, url, parameter, elbilId;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req;\n            url = '';\n\n            if (true) {\n              url = window.location.href;\n            } else {\n              url = req.url;\n            }\n\n            parameter = url.split(\"=\"); // Getting the id from the second part of the URL\n\n            elbilId = Number(parameter[1]); // Returning elbilId to the id from Params\n\n            return _context.abrupt(\"return\", {\n              elbilId: elbilId\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction ElbilDetail() {\n  var _useQuery = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  useEffect(function () {});\n\n  var articleData = _JSON$stringify(data);\n\n  function isIndex(elbil) {\n    // Getting ID from Router\n    var router = useRouter();\n    var queryId = router.query.id;\n    return elbil === queryId;\n  } // Filtering out all the Cars that does not match the id \n\n\n  var elbilDetail = elbiler.find(function elbil() {\n    if (elbil.id === queryId) {\n      return elbil;\n    } else {\n      console.log(error);\n    }\n  });\n  console.log(elbilDetail);\n  console.log(queryId); // Mapping the id that remains after filtering\n\n  var elBil = elbilDetail.map(function (elbil) {\n    return __jsx(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(Detail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(CarCard, {\n      merke: elbil.modell,\n      modell: elbil.merke,\n      type: elbil.type,\n      rekkevidde: elbil.rekkevidde,\n      pris: elbil.pris,\n      bildeURL: elbil.bildeURL,\n      id: elbil.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Sitteplasser: \", elbil.sitteplasser), articleData));\n  });\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), elBil);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","Navbar","CarCard","FlexWrapper","styled","useRouter","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","ElbilDetail","getInitialProps","req","url","window","location","href","parameter","split","elbilId","Number","notifyOnNetworkStatusChange","loading","error","data","fetchMore","networkStatus","articleData","isIndex","elbil","router","queryId","query","id","elbilDetail","find","console","log","elBil","map","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\nimport { useRouter } from 'next/router'\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`\n\n ElbilDetail.getInitialProps = async ({req}) =>{\n   let url = ''\n   if (typeof window !== \"undefined\") {\n     url = window.location.href\n   } else {\n    url = req.url\n   }\n  \n   let parameter = url.split(\"=\")\n   // Getting the id from the second part of the URL\n   let elbilId = Number(parameter[1])\n   // Returning elbilId to the id from Params\n   return {elbilId};\n }\n\nfunction ElbilDetail() {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n  useEffect(() => {\n   \n  });\n  const articleData = JSON.stringify(data)\n\n\n\n\n  function isIndex(elbil) {\n      // Getting ID from Router\n    const router = useRouter();\n    let queryId = router.query.id\n    return elbil === queryId;\n  }\n\n  // Filtering out all the Cars that does not match the id \n  const elbilDetail = elbiler.find(function elbil() {\n    if (elbil.id === queryId) {\n      return elbil\n    } else{\n      console.log(error)\n    }\n\n  })\n \n\n  console.log(elbilDetail)\n  console.log(queryId)\n\n  // Mapping the id that remains after filtering\n  const elBil = elbilDetail.map(elbil => \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={elbil.modell} \n        modell={elbil.merke}  \n        type={elbil.type}\n        rekkevidde={elbil.rekkevidde} \n        pris={elbil.pris} \n        bildeURL={elbil.bildeURL}\n        id={elbil.id}\n    />\n      <h3>Sitteplasser: {elbil.sitteplasser}</h3>\n      {articleData}\n      </Detail>\n    </Fade>\n    );\n\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBil}\n      </FlexWrapper>\n    )\n}\n\nexport default withApollo(ElbilDetail);\n\n"]},"metadata":{},"sourceType":"module"}