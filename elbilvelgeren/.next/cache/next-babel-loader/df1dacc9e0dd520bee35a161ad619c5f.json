{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    labrador {\\n    article(id: 71564397) {\\n      title\\n      bodytextHTML\\n      imageId\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth: 100%;\\ndisplay: flex;\\nflex-direction: column;\\nalign-self: center;  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nvar Detail = styled.div(_templateObject());\nvar ALL_POSTS_QUERY = gql(_templateObject2());\n\nElbilDetail.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var req, query, elbilId;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req, query = _ref.query;\n            elbilId = Number(query.id);\n            return _context.abrupt(\"return\", {\n              elbilId: elbilId\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction ElbilDetail(_ref3) {\n  var elbilId = _ref3.elbilId;\n\n  var _useQuery = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus; // Lage en sporring som cathcer error\n\n\n  var marius = _JSON$stringify(data);\n\n  console.log(useQuery); // Filtering out the car that matches the elbilId\n\n  var singleElbil = elbiler.filter(function (elbil) {\n    return elbil.id === elbilId;\n  });\n\n  var elBiler = __jsx(Fade, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(CarCard, {\n    merke: singleElbil[0].modell,\n    modell: singleElbil[0].merke,\n    type: singleElbil[0].type,\n    rekkevidde: singleElbil[0].rekkevidde,\n    pris: singleElbil[0].pris,\n    bildeURL: singleElbil[0].bildeURL,\n    id: singleElbil[0].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Sitteplasser: \", singleElbil[0].sitteplasser)));\n\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), elBiler);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","ElbilDetail","getInitialProps","req","query","elbilId","Number","id","notifyOnNetworkStatusChange","loading","error","data","fetchMore","networkStatus","marius","console","log","singleElbil","filter","elbil","elBiler","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,IAAMC,MAAM,GAAGN,MAAM,CAACO,GAAV,mBAAZ;AAOA,IAAMC,eAAe,GAAGJ,GAAH,oBAArB;;AAYAK,WAAW,CAACC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,GAAR,QAAQA,GAAR,EAAaC,KAAb,QAAaA,KAAb;AACxBC,YAAAA,OADwB,GACdC,MAAM,CAACF,KAAK,CAACG,EAAP,CADQ;AAAA,6CAErB;AAACF,cAAAA,OAAO,EAAPA;AAAD,aAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAKA,SAASJ,WAAT,QAAgC;AAAA,MAAVI,OAAU,SAAVA,OAAU;;AAAA,kBAC6BV,QAAQ,CACjEK,eADiE,EAEjE;AACEQ,IAAAA,2BAA2B,EAAE;AAD/B,GAFiE,CADrC;AAAA,MACtBC,OADsB,aACtBA,OADsB;AAAA,MACbC,KADa,aACbA,KADa;AAAA,MACNC,IADM,aACNA,IADM;AAAA,MACAC,SADA,aACAA,SADA;AAAA,MACWC,aADX,aACWA,aADX,EAQ9B;;;AACA,MAAIC,MAAM,GAAG,gBAAeH,IAAf,CAAb;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ,EAV8B,CAY9B;;AACA,MAAMsB,WAAW,GAAGxB,OAAO,CAACyB,MAAR,CAAgB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACZ,EAAN,KAAaF,OAAjB;AAAA,GAArB,CAApB;;AACA,MAAMe,OAAO,GACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AACE,IAAA,KAAK,EAAEH,WAAW,CAAC,CAAD,CAAX,CAAeI,MADxB;AAEE,IAAA,MAAM,EAAEJ,WAAW,CAAC,CAAD,CAAX,CAAeK,KAFzB;AAGE,IAAA,IAAI,EAAEL,WAAW,CAAC,CAAD,CAAX,CAAeM,IAHvB;AAIE,IAAA,UAAU,EAAEN,WAAW,CAAC,CAAD,CAAX,CAAeO,UAJ7B;AAKE,IAAA,IAAI,EAAEP,WAAW,CAAC,CAAD,CAAX,CAAeQ,IALvB;AAME,IAAA,QAAQ,EAAER,WAAW,CAAC,CAAD,CAAX,CAAeS,QAN3B;AAOE,IAAA,EAAE,EAAET,WAAW,CAAC,CAAD,CAAX,CAAeV,EAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBU,WAAW,CAAC,CAAD,CAAX,CAAeU,YAAlC,CAXA,CADF,CADF;;AAmBE,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGP,OAFH,CADF;AAMH;;AAED,eAAevB,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`\n\nElbilDetail.getInitialProps = async ({req, query}) =>{\n  let elbilId = Number(query.id)\n  return {elbilId};\n}\n\nfunction ElbilDetail({elbilId}) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n\n  // Lage en sporring som cathcer error\n  let marius = JSON.stringify(data)\n  console.log(useQuery)\n\n  // Filtering out the car that matches the elbilId\n  const singleElbil = elbiler.filter (elbil => elbil.id === elbilId)  \n  const elBiler =  \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={singleElbil[0].modell} \n        modell={singleElbil[0].merke}  \n        type={singleElbil[0].type}\n        rekkevidde={singleElbil[0].rekkevidde} \n        pris={singleElbil[0].pris} \n        bildeURL={singleElbil[0].bildeURL}\n        id={singleElbil[0].id}\n    />\n      \n      <h3>Sitteplasser: {singleElbil[0].sitteplasser}</h3>\n    \n      </Detail>\n    </Fade>\n    \n\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBiler}\n      </FlexWrapper>\n    )\n}\n\nexport default withApollo(ElbilDetail);\n\n\n\n"]},"metadata":{},"sourceType":"module"}