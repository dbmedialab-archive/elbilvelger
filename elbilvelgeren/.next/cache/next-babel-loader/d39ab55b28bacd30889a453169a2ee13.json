{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    labrador {\\n    article(id: 71564397) {\\n      title\\n      bodytextHTML\\n      imageId\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth: 100%;\\ndisplay: flex;\\nflex-direction: column;\\nalign-self: center;  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nvar Detail = styled.div(_templateObject());\nvar ALL_POSTS_QUERY = gql(_templateObject2());\n\nvar elbilDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(elbilDetail, _Component);\n\n  function elbilDetail() {\n    _classCallCheck(this, elbilDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(elbilDetail).apply(this, arguments));\n  }\n\n  _createClass(elbilDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _useQuery = useQuery(ALL_POSTS_QUERY, {\n        notifyOnNetworkStatusChange: true\n      }),\n          loading = _useQuery.loading,\n          error = _useQuery.error,\n          data = _useQuery.data,\n          fetchMore = _useQuery.fetchMore,\n          networkStatus = _useQuery.networkStatus;\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      var url = '';\n\n      if (true) {\n        url = window.location.href;\n      } else {\n        url = req.url;\n      }\n\n      var parameter = url.split(\"=\"); // Getting the id from the second part of the URL\n\n      var elbilId = Number(parameter[1]);\n      return elbilId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      // Filtering out the car that matches the elbilId\n      var singleElbil = elbiler.filter(function (elbil) {\n        return elbil.id === _this.getId;\n      });\n\n      var elBiler = __jsx(Fade, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(Detail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(CarCard, {\n        merke: singleElbil[0].modell,\n        modell: singleElbil[0].merke,\n        type: singleElbil[0].type,\n        rekkevidde: singleElbil[0].rekkevidde,\n        pris: singleElbil[0].pris,\n        bildeURL: singleElbil[0].bildeURL,\n        id: singleElbil[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Sitteplasser: \", singleElbil[0].sitteplasser), articleData));\n\n      return __jsx(FlexWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), elBiler);\n    }\n  }]);\n\n  return elbilDetail;\n}(Component);\n\nexport default withApollo(elbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","useState","Component","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","elbilDetail","notifyOnNetworkStatusChange","loading","error","data","fetchMore","networkStatus","url","window","location","href","req","parameter","split","elbilId","Number","singleElbil","filter","elbil","id","getId","elBiler","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser","articleData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,IAAMC,MAAM,GAAGN,MAAM,CAACO,GAAV,mBAAZ;AAOA,IAAMC,eAAe,GAAGJ,GAAH,oBAArB;;IAYMK,W;;;;;;;;;;;;;wCAEe;AAAA,sBAC0CN,QAAQ,CACjEK,eADiE,EAEjE;AACEE,QAAAA,2BAA2B,EAAE;AAD/B,OAFiE,CADlD;AAAA,UACTC,OADS,aACTA,OADS;AAAA,UACAC,KADA,aACAA,KADA;AAAA,UACOC,IADP,aACOA,IADP;AAAA,UACaC,SADb,aACaA,SADb;AAAA,UACwBC,aADxB,aACwBA,aADxB;AAOlB;;;4BAGO;AACN,UAAIC,GAAG,GAAG,EAAV;;AACA,gBAAmC;AACjCA,QAAAA,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAtB;AACD,OAFD,MAEO;AACLH,QAAAA,GAAG,GAAGI,GAAG,CAACJ,GAAV;AACD;;AACD,UAAIK,SAAS,GAAGL,GAAG,CAACM,KAAJ,CAAU,GAAV,CAAhB,CAPM,CAQN;;AACA,UAAIC,OAAO,GAAGC,MAAM,CAACH,SAAS,CAAC,CAAD,CAAV,CAApB;AACA,aAAOE,OAAP;AACD;;;6BAEQ;AAAA;;AAGT;AACA,UAAME,WAAW,GAAGxB,OAAO,CAACyB,MAAR,CAAgB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,EAAN,KAAa,KAAI,CAACC,KAAtB;AAAA,OAArB,CAApB;;AACA,UAAMC,OAAO,GACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,OAAD;AACE,QAAA,KAAK,EAAEL,WAAW,CAAC,CAAD,CAAX,CAAeM,MADxB;AAEE,QAAA,MAAM,EAAEN,WAAW,CAAC,CAAD,CAAX,CAAeO,KAFzB;AAGE,QAAA,IAAI,EAAEP,WAAW,CAAC,CAAD,CAAX,CAAeQ,IAHvB;AAIE,QAAA,UAAU,EAAER,WAAW,CAAC,CAAD,CAAX,CAAeS,UAJ7B;AAKE,QAAA,IAAI,EAAET,WAAW,CAAC,CAAD,CAAX,CAAeU,IALvB;AAME,QAAA,QAAQ,EAAEV,WAAW,CAAC,CAAD,CAAX,CAAeW,QAN3B;AAOE,QAAA,EAAE,EAAEX,WAAW,CAAC,CAAD,CAAX,CAAeG,EAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmBH,WAAW,CAAC,CAAD,CAAX,CAAeY,YAAlC,CAVA,EAWCC,WAXD,CADF,CADF;;AAiBA,aACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAECR,OAFD,CADF;AAMD;;;;EArDyBlC,S;;AAyD1B,eAAeS,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`\n\nclass elbilDetail extends Component {\n\n  componentDidMount(){\n    const { loading, error, data, fetchMore, networkStatus } = useQuery(\n      ALL_POSTS_QUERY,\n      {\n        notifyOnNetworkStatusChange: true\n      }\n    )\n  }\n\n\n  getId() {\n    let url = ''\n    if (typeof window !== \"undefined\") {\n      url = window.location.href\n    } else {\n      url = req.url\n    }\n    let parameter = url.split(\"=\")\n    // Getting the id from the second part of the URL\n    let elbilId = Number(parameter[1])\n    return elbilId;\n  }\n\n  render() {\n\n\n  // Filtering out the car that matches the elbilId\n  const singleElbil = elbiler.filter (elbil => elbil.id === this.getId)  \n  const elBiler =  \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={singleElbil[0].modell} \n        modell={singleElbil[0].merke}  \n        type={singleElbil[0].type}\n        rekkevidde={singleElbil[0].rekkevidde} \n        pris={singleElbil[0].pris} \n        bildeURL={singleElbil[0].bildeURL}\n        id={singleElbil[0].id}\n    />\n      <h3>Sitteplasser: {singleElbil[0].sitteplasser}</h3>\n      {articleData}\n      </Detail>\n    </Fade>\n    \n  return(\n    <FlexWrapper>\n    <Navbar />\n    {elBiler}\n  </FlexWrapper>\n  )\n}\n}\n\n\nexport default withApollo(elbilDetail);\n\n\n\n"]},"metadata":{},"sourceType":"module"}