{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`;\n\nclass elbilDetail extends Component {\n  componentWillMount() {\n    const {\n      loading,\n      error,\n      data,\n      fetchMore,\n      networkStatus\n    } = useQuery(ALL_POSTS_QUERY, {\n      notifyOnNetworkStatusChange: true\n    });\n  }\n\n  getId() {\n    let url = '';\n\n    if (false) {\n      url = window.location.href;\n    } else {\n      url = req.url;\n    }\n\n    let parameter = url.split(\"=\"); // Getting the id from the second part of the URL\n\n    let elbilId = Number(parameter[1]);\n    return elbilId;\n  }\n\n  render() {\n    const articleData = _JSON$stringify(data); // Filtering out the car that matches the elbilId\n\n\n    const singleElbil = elbiler.filter(elbil => elbil.id === this.getId);\n\n    const elBiler = __jsx(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(Detail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(CarCard, {\n      merke: singleElbil[0].modell,\n      modell: singleElbil[0].merke,\n      type: singleElbil[0].type,\n      rekkevidde: singleElbil[0].rekkevidde,\n      pris: singleElbil[0].pris,\n      bildeURL: singleElbil[0].bildeURL,\n      id: singleElbil[0].id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sitteplasser: \", singleElbil[0].sitteplasser), articleData));\n\n    return __jsx(FlexWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), elBiler);\n  }\n\n}\n\nexport default withApollo(elbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","useState","Component","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","elbilDetail","componentWillMount","loading","error","data","fetchMore","networkStatus","ALL_POSTS_QUERY","notifyOnNetworkStatusChange","getId","url","window","location","href","req","parameter","split","elbilId","Number","render","articleData","singleElbil","filter","elbil","id","elBiler","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;;;;CAA1B;;AASA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAElCa,EAAAA,kBAAkB,GAAE;AAClB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA,IAAlB;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA;AAAnC,QAAqDX,QAAQ,CACjEY,eADiE,EAEjE;AACEC,MAAAA,2BAA2B,EAAE;AAD/B,KAFiE,CAAnE;AAMD;;AAGDC,EAAAA,KAAK,GAAG;AACN,QAAIC,GAAG,GAAG,EAAV;;AACA,eAAmC;AACjCA,MAAAA,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAtB;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,GAAGI,GAAG,CAACJ,GAAV;AACD;;AACD,QAAIK,SAAS,GAAGL,GAAG,CAACM,KAAJ,CAAU,GAAV,CAAhB,CAPM,CAQN;;AACA,QAAIC,OAAO,GAAGC,MAAM,CAACH,SAAS,CAAC,CAAD,CAAV,CAApB;AACA,WAAOE,OAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAGT,UAAMC,WAAW,GAAG,gBAAehB,IAAf,CAApB,CAHS,CAKT;;;AACA,UAAMiB,WAAW,GAAG5B,OAAO,CAAC6B,MAAR,CAAgBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,KAAKf,KAA3C,CAApB;;AACA,UAAMgB,OAAO,GACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,OAAD;AACE,MAAA,KAAK,EAAEJ,WAAW,CAAC,CAAD,CAAX,CAAeK,MADxB;AAEE,MAAA,MAAM,EAAEL,WAAW,CAAC,CAAD,CAAX,CAAeM,KAFzB;AAGE,MAAA,IAAI,EAAEN,WAAW,CAAC,CAAD,CAAX,CAAeO,IAHvB;AAIE,MAAA,UAAU,EAAEP,WAAW,CAAC,CAAD,CAAX,CAAeQ,UAJ7B;AAKE,MAAA,IAAI,EAAER,WAAW,CAAC,CAAD,CAAX,CAAeS,IALvB;AAME,MAAA,QAAQ,EAAET,WAAW,CAAC,CAAD,CAAX,CAAeU,QAN3B;AAOE,MAAA,EAAE,EAAEV,WAAW,CAAC,CAAD,CAAX,CAAeG,EAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBH,WAAW,CAAC,CAAD,CAAX,CAAeW,YAAlC,CAVA,EAWCZ,WAXD,CADF,CADF;;AAiBA,WACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAECK,OAFD,CADF;AAMD;;AAvDmC;;AA2DpC,eAAe5B,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\n\n\nclass elbilDetail extends Component {\n\n  componentWillMount(){\n    const { loading, error, data, fetchMore, networkStatus } = useQuery(\n      ALL_POSTS_QUERY,\n      {\n        notifyOnNetworkStatusChange: true\n      }\n    )\n  }\n\n\n  getId() {\n    let url = ''\n    if (typeof window !== \"undefined\") {\n      url = window.location.href\n    } else {\n      url = req.url\n    }\n    let parameter = url.split(\"=\")\n    // Getting the id from the second part of the URL\n    let elbilId = Number(parameter[1])\n    return elbilId;\n  }\n\n  render() {\n\n\n  const articleData = JSON.stringify(data)\n\n  // Filtering out the car that matches the elbilId\n  const singleElbil = elbiler.filter (elbil => elbil.id === this.getId)  \n  const elBiler =  \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={singleElbil[0].modell} \n        modell={singleElbil[0].merke}  \n        type={singleElbil[0].type}\n        rekkevidde={singleElbil[0].rekkevidde} \n        pris={singleElbil[0].pris} \n        bildeURL={singleElbil[0].bildeURL}\n        id={singleElbil[0].id}\n    />\n      <h3>Sitteplasser: {singleElbil[0].sitteplasser}</h3>\n      {articleData}\n      </Detail>\n    </Fade>\n    \n  return(\n    <FlexWrapper>\n    <Navbar />\n    {elBiler}\n  </FlexWrapper>\n  )\n}\n}\n\n\nexport default withApollo(elbilDetail);\n\n\n\n"]},"metadata":{},"sourceType":"module"}