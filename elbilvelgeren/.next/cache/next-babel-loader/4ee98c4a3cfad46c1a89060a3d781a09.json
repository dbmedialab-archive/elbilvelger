{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`;\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n    }\n  }\n}\n`;\n\nElbilDetail.getInitialProps = async ({\n  req\n}) => {\n  let url = '';\n\n  if (false) {\n    url = window.location.href;\n  } else {\n    url = req.url;\n  }\n\n  let query = url.split(\"=\"); // Getting the id from the second part of the URL\n\n  let elbilId = Number(query[1]); // Returning elbilId to the id from Params\n\n  return {\n    elbilId\n  };\n};\n\nfunction ElbilDetail({\n  elbilId\n}) {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), elBiler);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","ElbilDetail","getInitialProps","req","url","window","location","href","query","split","elbilId","Number","loading","error","data","fetchMore","networkStatus","notifyOnNetworkStatusChange","useEffect","document","title","count","elBiler"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;;;;CAA1B;AAOA,MAAMC,eAAe,GAAGJ,GAAI;;;;;;;;;CAA5B;;AAWAK,WAAW,CAACC,eAAZ,GAA8B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAgB;AAC5C,MAAIC,GAAG,GAAG,EAAV;;AACA,aAAmC;AACjCA,IAAAA,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAtB;AACD,GAFD,MAEO;AACLH,IAAAA,GAAG,GAAGD,GAAG,CAACC,GAAV;AACD;;AAED,MAAII,KAAK,GAAGJ,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAZ,CAR4C,CAS5C;;AACA,MAAIC,OAAO,GAAGC,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAApB,CAV4C,CAW5C;;AACA,SAAO;AAACE,IAAAA;AAAD,GAAP;AACD,CAbD;;AAeA,SAAST,WAAT,CAAqB;AAACS,EAAAA;AAAD,CAArB,EAAgC;AAC9B,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDrB,QAAQ,CACjEK,eADiE,EAEjE;AACEiB,IAAAA,2BAA2B,EAAE;AAD/B,GAFiE,CAAnE;AAMAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,QAAQ,CAACC,KAAT,GAAkB,eAAcC,KAAM,QAAtC;AACD,GAHQ,CAAT;AAIE,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGC,OAFH,CADF;AAOH;;AAED,eAAezB,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n    }\n  }\n}\n`\n\nElbilDetail.getInitialProps = async ({req}) =>{\n  let url = ''\n  if (typeof window !== \"undefined\") {\n    url = window.location.href\n  } else {\n    url = req.url\n  }\n  \n  let query = url.split(\"=\")\n  // Getting the id from the second part of the URL\n  let elbilId = Number(query[1])\n  // Returning elbilId to the id from Params\n  return {elbilId};\n}\n\nfunction ElbilDetail({elbilId}) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBiler}\n      </FlexWrapper>\n    )\n\n}\n\nexport default withApollo(ElbilDetail);\n\n"]},"metadata":{},"sourceType":"module"}