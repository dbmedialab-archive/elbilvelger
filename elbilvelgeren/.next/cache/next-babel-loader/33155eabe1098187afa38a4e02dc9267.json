{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    labrador {\\n    article(id: 71564397) {\\n      title\\n      bodytextHTML\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth: 100%;\\ndisplay: flex;\\nflex-direction: column;\\nalign-self: center;  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nvar Detail = styled.div(_templateObject());\nexport var ALL_POSTS_QUERY = gql(_templateObject2());\n\nElbilDetail.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var req, url, query, queryId;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req;\n            url = \"\";\n\n            if (window === 'undefined') {\n              url = req.url;\n            } else {\n              url = window.location.href;\n            }\n\n            query = url.split(\"=\"); // Getting the id from the second part of the URL\n\n            queryId = Number(query[1]); // Setting elbilId state to the id from Params\n\n            return _context.abrupt(\"return\", {\n              queryId: queryId\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction ElbilDetail(_ref3) {\n  var queryId = _ref3.queryId;\n\n  var _useQuery = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus; // Filtering out all the Cars that does not match the id \n\n\n  var elbilDetail = elbiler.filter(function (elbil) {\n    return elbil.id === elbilId;\n  }); // Mapping the id that remains after filtering\n\n  var elBiler = elbilDetail.map(function (elbil) {\n    return __jsx(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(Detail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(CarCard, {\n      merke: elbil.modell,\n      modell: elbil.merke,\n      type: elbil.type,\n      rekkevidde: elbil.rekkevidde,\n      pris: elbil.pris,\n      bildeURL: elbil.bildeURL,\n      id: elbil.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, elbil.merke, \" \", elbil.modell, \" \", elbil.type), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Sitteplasser: \", elbil.sitteplasser), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Tester:\"), __jsx(\"a\", {\n      href: elbil.tester,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, elbil.tester), _JSON$stringify({\n      data: data\n    })));\n  });\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), elBiler);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","Component","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","ElbilDetail","getInitialProps","req","url","window","location","href","query","split","queryId","Number","notifyOnNetworkStatusChange","loading","error","data","fetchMore","networkStatus","elbilDetail","filter","elbil","id","elbilId","elBiler","map","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser","tester"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nexport const ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n    }\n  }\n}\n`\n\nElbilDetail.getInitialProps = async ({req}) =>{\n  let url = \"\"\n  if (window === 'undefined') {\n    url = req.url\n  } else {\n    url = window.location.href\n  }\n  let query = url.split(\"=\")\n  // Getting the id from the second part of the URL\n  let queryId = Number(query[1])\n  // Setting elbilId state to the id from Params\n  return {queryId};\n}\n\nfunction ElbilDetail({queryId}) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n\n  // Filtering out all the Cars that does not match the id \n  const elbilDetail = elbiler.filter (elbil => elbil.id === elbilId)\n  // Mapping the id that remains after filtering\n  const elBiler = elbilDetail.map(elbil => \n    \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={elbil.modell} \n        modell={elbil.merke}  \n        type={elbil.type}\n        rekkevidde={elbil.rekkevidde} \n        pris={elbil.pris} \n        bildeURL={elbil.bildeURL}\n        id={elbil.id}\n    />\n\n      <h1>{elbil.merke} {elbil.modell} {elbil.type}</h1>\n      <h3>Sitteplasser: {elbil.sitteplasser}</h3>\n\n      <h3>Tester:</h3>\n      <a href={elbil.tester} target=\"_blank\">{elbil.tester}</a>\n      {JSON.stringify({data})}\n      </Detail>\n    </Fade>\n    );\n\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBiler}\n      </FlexWrapper>\n    )\n\n}\n\n\n\n\n\nexport default withApollo(ElbilDetail);\n\n"]},"metadata":{},"sourceType":"module"}