{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/Components/CarCard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { FaMapMarkerAlt } from 'react-icons/fa';\nimport styled from '@emotion/styled';\nimport Link from 'next/link';\n\nvar CarCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CarCard, _Component);\n\n  function CarCard() {\n    _classCallCheck(this, CarCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CarCard).apply(this, arguments));\n  }\n\n  _createClass(CarCard, [{\n    key: \"numberWithSpaces\",\n    value: function numberWithSpaces(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Link, {\n        href: {\n          pathname: '/elbil',\n          query: {\n            id: \"\".concat(this.props.id)\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, __jsx(CardWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"imgTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.modell, \" \"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.props.merke, \" \"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.type)), __jsx(\"div\", {\n        className: \"cardFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(FaMapMarkerAlt, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), \" \", this.props.rekkevidde, \" \", __jsx(\"span\", {\n        className: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"km\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Fra: \", this.numberWithSpaces(\"\".concat(this.props.pris)), \",-\"))))));\n    }\n  }]);\n\n  return CarCard;\n}(Component);\n\nexport default CarCard;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/Components/CarCard.js"],"names":["React","Component","FaMapMarkerAlt","styled","Link","CarCard","x","toString","replace","pathname","query","id","props","modell","merke","type","rekkevidde","numberWithSpaces","pris"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,O;;;;;;;;;;;;;qCAEcC,C,EAAG;AACnB,aAAOA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACD;;;6BAEQ;AACP,aACA,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,EAAE,YAAK,KAAKC,KAAL,CAAWD,EAAhB;AAAJ;AAA7B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKC,KAAL,CAAWC,MAAlB,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKD,KAAL,CAAWE,KAAlB,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKF,KAAL,CAAWG,IAAlB,CAHF,CADF,EAOE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAAJ,OAAsC,KAAKH,KAAL,CAAWI,UAAjD,OAA6D;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7D,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B,KAAKC,gBAAL,WAAyB,KAAKL,KAAL,CAAWM,IAApC,EAA9B,OAAJ,CAFF,CADF,CAPF,CADF,CADA;AAkBD;;;;EAzBmBjB,S;;AA4BtB,eAAeI,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { FaMapMarkerAlt} from 'react-icons/fa';\nimport styled from '@emotion/styled';\nimport Link from 'next/link';\n\nclass CarCard extends Component {\n\n   numberWithSpaces(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n\n  render() {   \n    return (\n    <Link href={{ pathname: '/elbil', query: { id: `${this.props.id}` } }}>\n      <CardWrapper>\n        <div className=\"imgTitle\">\n          <span>{this.props.modell} </span>\n          <span>{this.props.merke} </span>\n          <span>{this.props.type}</span>\n        </div>\n\n        <div className=\"cardFooter\">\n          <ul>\n            <li><span><FaMapMarkerAlt  /></span> {this.props.rekkevidde} <span className=\"light\">km</span></li>\n            <li><span className=\"price\">Fra: {this.numberWithSpaces(`${this.props.pris}`)},-</span></li>   \n          </ul>\n        </div>\n      </CardWrapper>\n      </Link>\n    );\n  }\n}\n\nexport default CarCard;\n"]},"metadata":{},"sourceType":"module"}