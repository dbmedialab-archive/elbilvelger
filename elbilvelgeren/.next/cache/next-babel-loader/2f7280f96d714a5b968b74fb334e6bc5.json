{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`;\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n    }\n  }\n}\n`;\n\nElbilDetail.getInitialProps = async ({\n  req\n}) => {};\n\nfunction ElbilDetail({\n  elbilId\n}) {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  useEffect(() => {\n    let url = '';\n\n    if (false) {\n      url = window.location.href;\n    } else {\n      url = req.url;\n    }\n\n    let query = url.split(\"=\"); // Getting the id from the second part of the URL\n\n    let elbilId = Number(query[1]); // Returning elbilId to the id from Params\n\n    return {\n      elbilId\n    };\n  }); // Filtering out all the Cars that does not match the id \n\n  const elbilDetail = elbiler.filter(elbil => elbil.id === elbilId); // Mapping the id that remains after filtering\n\n  const elBiler = elbilDetail.map(elbil => __jsx(Fade, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(CarCard, {\n    merke: elbil.modell,\n    modell: elbil.merke,\n    type: elbil.type,\n    rekkevidde: elbil.rekkevidde,\n    pris: elbil.pris,\n    bildeURL: elbil.bildeURL,\n    id: elbil.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Sitteplasser: \", elbil.sitteplasser), _JSON$stringify({\n    data\n  }))));\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), elBiler);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","ElbilDetail","getInitialProps","req","elbilId","loading","error","data","fetchMore","networkStatus","notifyOnNetworkStatusChange","url","window","location","href","query","split","Number","elbilDetail","filter","elbil","id","elBiler","map","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;;;;CAA1B;AAOA,MAAMC,eAAe,GAAGJ,GAAI;;;;;;;;;CAA5B;;AAWAK,WAAW,CAACC,eAAZ,GAA8B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAgB,CAE7C,CAFD;;AAIA,SAASF,WAAT,CAAqB;AAACG,EAAAA;AAAD,CAArB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDd,QAAQ,CACjEK,eADiE,EAEjE;AACEU,IAAAA,2BAA2B,EAAE;AAD/B,GAFiE,CAAnE;AAMAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,GAAG,GAAG,EAAV;;AACA,eAAmC;AACjCA,MAAAA,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAtB;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,GAAGR,GAAG,CAACQ,GAAV;AACD;;AAED,QAAII,KAAK,GAAGJ,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAZ,CARc,CASd;;AACA,QAAIZ,OAAO,GAAGa,MAAM,CAACF,KAAK,CAAC,CAAD,CAAN,CAApB,CAVc,CAWd;;AACA,WAAO;AAACX,MAAAA;AAAD,KAAP;AACD,GAbQ,CAAT,CAP8B,CAuB9B;;AACA,QAAMc,WAAW,GAAGzB,OAAO,CAAC0B,MAAR,CAAgBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAajB,OAAtC,CAApB,CAxB8B,CAyB9B;;AACA,QAAMkB,OAAO,GAAGJ,WAAW,CAACK,GAAZ,CAAgBH,KAAK,IAEnC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACI,MADf;AAEE,IAAA,MAAM,EAAEJ,KAAK,CAACK,KAFhB;AAGE,IAAA,IAAI,EAAEL,KAAK,CAACM,IAHd;AAIE,IAAA,UAAU,EAAEN,KAAK,CAACO,UAJpB;AAKE,IAAA,IAAI,EAAEP,KAAK,CAACQ,IALd;AAME,IAAA,QAAQ,EAAER,KAAK,CAACS,QANlB;AAOE,IAAA,EAAE,EAAET,KAAK,CAACC,EAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBD,KAAK,CAACU,YAAzB,CAVA,EAWC,gBAAe;AAACvB,IAAAA;AAAD,GAAf,CAXD,CADF,CAFc,CAAhB;AAmBE,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGe,OAFH,CADF;AAOH;;AAED,eAAezB,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n    }\n  }\n}\n`\n\nElbilDetail.getInitialProps = async ({req}) =>{\n\n}\n\nfunction ElbilDetail({elbilId}) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n  useEffect(() => {\n    let url = ''\n    if (typeof window !== \"undefined\") {\n      url = window.location.href\n    } else {\n      url = req.url\n    }\n    \n    let query = url.split(\"=\")\n    // Getting the id from the second part of the URL\n    let elbilId = Number(query[1])\n    // Returning elbilId to the id from Params\n    return {elbilId};\n  });\n\n  \n  // Filtering out all the Cars that does not match the id \n  const elbilDetail = elbiler.filter (elbil => elbil.id === elbilId)\n  // Mapping the id that remains after filtering\n  const elBiler = elbilDetail.map(elbil => \n\n    <Fade>\n      <Detail>\n      <CarCard \n        merke={elbil.modell} \n        modell={elbil.merke}  \n        type={elbil.type}\n        rekkevidde={elbil.rekkevidde} \n        pris={elbil.pris} \n        bildeURL={elbil.bildeURL}\n        id={elbil.id}\n    />\n      <h3>Sitteplasser: {elbil.sitteplasser}</h3>\n      {JSON.stringify({data})}\n      </Detail>\n    </Fade>\n    );\n\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBiler}\n      </FlexWrapper>\n    )\n\n}\n\nexport default withApollo(ElbilDetail);\n\n"]},"metadata":{},"sourceType":"module"}