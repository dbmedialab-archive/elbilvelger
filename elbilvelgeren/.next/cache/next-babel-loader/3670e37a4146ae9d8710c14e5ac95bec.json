{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`;\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`;\n\nElbilDetail.getInitialProps = async ({\n  req,\n  query\n}) => {\n  let elbilId = Number(query.id);\n  return {\n    elbilId\n  };\n};\n\nfunction ElbilDetail({\n  elbilId\n}) {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }); // Filtering out the car that matches the elbilId\n\n  const singleElbil = elbiler.filter(elbil => elbil.id === elbilId);\n\n  const elBiler = __jsx(Fade, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(CarCard, {\n    merke: singleElbil[0].modell,\n    modell: singleElbil[0].merke,\n    type: singleElbil[0].type,\n    rekkevidde: singleElbil[0].rekkevidde,\n    pris: singleElbil[0].pris,\n    bildeURL: singleElbil[0].bildeURL,\n    id: singleElbil[0].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Sitteplasser: \", singleElbil[0].sitteplasser)));\n\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), elBiler);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","ElbilDetail","getInitialProps","req","query","elbilId","Number","id","loading","error","data","fetchMore","networkStatus","notifyOnNetworkStatusChange","singleElbil","filter","elbil","elBiler","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;;;;CAA1B;AAOA,MAAMC,eAAe,GAAGJ,GAAI;;;;;;;;;;CAA5B;;AAYAK,WAAW,CAACC,eAAZ,GAA8B,OAAO;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAP,KAAuB;AACnD,MAAIC,OAAO,GAAGC,MAAM,CAACF,KAAK,CAACG,EAAP,CAApB;AACA,SAAO;AAACF,IAAAA;AAAD,GAAP;AACD,CAHD;;AAKA,SAASJ,WAAT,CAAqB;AAACI,EAAAA;AAAD,CAArB,EAAgC;AAC9B,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDjB,QAAQ,CACjEK,eADiE,EAEjE;AACEa,IAAAA,2BAA2B,EAAE;AAD/B,GAFiE,CAAnE,CAD8B,CAQ9B;;AACA,QAAMC,WAAW,GAAGrB,OAAO,CAACsB,MAAR,CAAgBC,KAAK,IAAIA,KAAK,CAACT,EAAN,KAAaF,OAAtC,CAApB;;AACA,QAAMY,OAAO,GACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AACE,IAAA,KAAK,EAAEH,WAAW,CAAC,CAAD,CAAX,CAAeI,MADxB;AAEE,IAAA,MAAM,EAAEJ,WAAW,CAAC,CAAD,CAAX,CAAeK,KAFzB;AAGE,IAAA,IAAI,EAAEL,WAAW,CAAC,CAAD,CAAX,CAAeM,IAHvB;AAIE,IAAA,UAAU,EAAEN,WAAW,CAAC,CAAD,CAAX,CAAeO,UAJ7B;AAKE,IAAA,IAAI,EAAEP,WAAW,CAAC,CAAD,CAAX,CAAeQ,IALvB;AAME,IAAA,QAAQ,EAAER,WAAW,CAAC,CAAD,CAAX,CAAeS,QAN3B;AAOE,IAAA,EAAE,EAAET,WAAW,CAAC,CAAD,CAAX,CAAeP,EAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBO,WAAW,CAAC,CAAD,CAAX,CAAeU,YAAlC,CAXA,CADF,CADF;;AAkBE,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGP,OAFH,CADF;AAMH;;AAED,eAAepB,UAAU,CAACI,WAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`\n\nElbilDetail.getInitialProps = async ({req, query}) =>{\n  let elbilId = Number(query.id)\n  return {elbilId};\n}\n\nfunction ElbilDetail({elbilId}) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n\n  // Filtering out the car that matches the elbilId\n  const singleElbil = elbiler.filter (elbil => elbil.id === elbilId)  \n  const elBiler =  \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={singleElbil[0].modell} \n        modell={singleElbil[0].merke}  \n        type={singleElbil[0].type}\n        rekkevidde={singleElbil[0].rekkevidde} \n        pris={singleElbil[0].pris} \n        bildeURL={singleElbil[0].bildeURL}\n        id={singleElbil[0].id}\n    />\n      \n      <h3>Sitteplasser: {singleElbil[0].sitteplasser}</h3>\n    \n      </Detail>\n    </Fade>\n    \n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBiler}\n      </FlexWrapper>\n    )\n}\n\nexport default withApollo(ElbilDetail);\n\n\n\n"]},"metadata":{},"sourceType":"module"}