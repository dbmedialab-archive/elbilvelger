{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\";\nimport styled from '@emotion/styled';\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { withApollo } from \"../lib/apollo\";\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`;\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`;\n\nclass elbilDetail extends Component {\n  render() {\n    const articleData = _JSON$stringify(data); // Filtering out the car that matches the elbilId\n\n\n    const singleElbil = elbiler.filter(elbil => elbil.id === elbilId);\n\n    const elBiler = __jsx(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Detail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(CarCard, {\n      merke: singleElbil[0].modell,\n      modell: singleElbil[0].merke,\n      type: singleElbil[0].type,\n      rekkevidde: singleElbil[0].rekkevidde,\n      pris: singleElbil[0].pris,\n      bildeURL: singleElbil[0].bildeURL,\n      id: singleElbil[0].id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Sitteplasser: \", singleElbil[0].sitteplasser), articleData));\n\n    return __jsx(FlexWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), elBiler);\n  }\n\n}\n\nElbilDetail.getInitialProps = async ({\n  req\n}) => {\n  let url = '';\n\n  if (false) {\n    url = window.location.href;\n  } else {\n    url = req.url;\n  }\n\n  let parameter = url.split(\"=\"); // Getting the id from the second part of the URL\n\n  let elbilId = Number(parameter[1]); // Returning elbilId to the id from Params\n\n  return {\n    elbilId\n  };\n};\n\nfunction ElbilDetail({\n  elbilId\n}) {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }); // Using effect to \n\n  useEffect(() => {\n    console.log(\"Component before \"); // returned function will be called on component unmount \n\n    return () => {\n      console.log(\"Component umount\");\n    };\n  }, console.log(\"Siste call 1 gang\"));\n\n  const articleData = _JSON$stringify(data); // Filtering out the car that matches the elbilId\n\n\n  const singleElbil = elbiler.filter(elbil => elbil.id === elbilId);\n\n  const elBiler = __jsx(Fade, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(CarCard, {\n    merke: singleElbil[0].modell,\n    modell: singleElbil[0].merke,\n    type: singleElbil[0].type,\n    rekkevidde: singleElbil[0].rekkevidde,\n    pris: singleElbil[0].pris,\n    bildeURL: singleElbil[0].bildeURL,\n    id: singleElbil[0].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Sitteplasser: \", singleElbil[0].sitteplasser), articleData));\n\n  return __jsx(FlexWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), elBiler);\n}\n\nexport default withApollo(ElbilDetail);","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/elbilvelger/elbilvelgeren/pages/elbil.js"],"names":["React","useEffect","useState","Component","Navbar","CarCard","FlexWrapper","styled","elbiler","Fade","useQuery","gql","withApollo","Detail","div","ALL_POSTS_QUERY","elbilDetail","render","articleData","data","singleElbil","filter","elbil","id","elbilId","elBiler","modell","merke","type","rekkevidde","pris","bildeURL","sitteplasser","ElbilDetail","getInitialProps","req","url","window","location","href","parameter","split","Number","loading","error","fetchMore","networkStatus","notifyOnNetworkStatusChange","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport Navbar from \"../Components/Navbar\";\nimport CarCard from \"../Components/CarCard\";\nimport FlexWrapper from \"../Components/FlexWrapper\"\nimport styled from '@emotion/styled';\n\nimport elbiler from '../elbiler.json';\nimport Fade from 'react-reveal/Fade';\n\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { withApollo } from \"../lib/apollo\"\n\nconst Detail = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-self: center;  \n`\n\nconst ALL_POSTS_QUERY = gql`\n{\n    labrador {\n    article(id: 71564397) {\n      title\n      bodytextHTML\n      imageId\n    }\n  }\n}\n`\n\nclass elbilDetail extends Component {\nrender() {\n  const articleData = JSON.stringify(data)\n\n  // Filtering out the car that matches the elbilId\n  const singleElbil = elbiler.filter (elbil => elbil.id === elbilId)  \n  const elBiler =  \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={singleElbil[0].modell} \n        modell={singleElbil[0].merke}  \n        type={singleElbil[0].type}\n        rekkevidde={singleElbil[0].rekkevidde} \n        pris={singleElbil[0].pris} \n        bildeURL={singleElbil[0].bildeURL}\n        id={singleElbil[0].id}\n    />\n      <h3>Sitteplasser: {singleElbil[0].sitteplasser}</h3>\n      {articleData}\n      </Detail>\n    </Fade>\n    \n  return(\n    <FlexWrapper>\n    <Navbar />\n    {elBiler}\n  </FlexWrapper>\n  )\n}\n}\n\n\nElbilDetail.getInitialProps = async ({req}) =>{\n  let url = ''\n  if (typeof window !== \"undefined\") {\n    url = window.location.href\n  } else {\n    url = req.url\n  }\n  \n  let parameter = url.split(\"=\")\n  // Getting the id from the second part of the URL\n  let elbilId = Number(parameter[1])\n  // Returning elbilId to the id from Params\n  return {elbilId};\n}\n\nfunction ElbilDetail({elbilId}) {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n\n  // Using effect to \n  useEffect(() => {\n    console.log(\"Component before \");\n    // returned function will be called on component unmount \n    return () => {\n      console.log(\"Component umount\");\n    }\n  }, console.log(\"Siste call 1 gang\"))\n\n\n  const articleData = JSON.stringify(data)\n\n  // Filtering out the car that matches the elbilId\n  const singleElbil = elbiler.filter (elbil => elbil.id === elbilId)  \n  const elBiler =  \n    <Fade>\n      <Detail>\n      <CarCard \n        merke={singleElbil[0].modell} \n        modell={singleElbil[0].merke}  \n        type={singleElbil[0].type}\n        rekkevidde={singleElbil[0].rekkevidde} \n        pris={singleElbil[0].pris} \n        bildeURL={singleElbil[0].bildeURL}\n        id={singleElbil[0].id}\n    />\n      <h3>Sitteplasser: {singleElbil[0].sitteplasser}</h3>\n      {articleData}\n      </Detail>\n    </Fade>\n    \n\n    return (\n      <FlexWrapper>\n        <Navbar />\n        {elBiler}\n      </FlexWrapper>\n    )\n}\n\nexport default withApollo(ElbilDetail);\n\n\n\n"]},"metadata":{},"sourceType":"module"}